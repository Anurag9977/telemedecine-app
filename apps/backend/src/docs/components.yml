components:
  schemas:
    Doctor:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: number
        phone:
          type: string
        address:
          type: string
        city:
          type: string
        zip:
          type: number
        description:
          type: string
        hospital:
          type: string
        specialty:
          type: string
        price:
          type: number
        degrees:
          type: array
        items:
          type: string
        certifications:
          type: array
          items:
            type: string
        schedule:
          type: array
          items:
            type: string
        experience:
          type: string
      example:
        firstName: john
        lastName: doe
        age: 32
        phone: 23423432
        address: 123 Health St, Apt 4B
        city: Medicity
        zip: 12345
        description: Experienced cardiologist specializing in heart surgeries and patient care.
        hospital: MediCare General Hospital
        specialty: Cardiology
        price: 150
        degrees:
          - "MD in Cardiology"
          - "PhD in Cardiovascular Medicine"
        certifications:
          - "American Board of Internal Medicine Certification"
          - "Advanced Cardiac Life Support (ACLS)"
        schedule:
          - "Lundi"
          - "Samedi"
        experience: "+5 ans"

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
